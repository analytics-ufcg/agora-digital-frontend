image: agoradigital/frontend-cicd:latest

services:
  - docker:dind

stages:
  - build
  - test
  - release
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  CANDIDATE_IMAGE: $CI_REGISTRY_IMAGE:gitlab-ci-dev-development
  RELEASE_IMAGE: $CI_REGISTRY_IMAGE:gitlab-ci-development
  COMPOSE_BUILDER_CMD: docker-compose -f docker_extra/builder.yml
  COMPOSE_CMD: docker-compose -f docker_extra/prod.yml
  FRONTEND_BUILDER_IMAGE_TAG: $CI_REGISTRY_IMAGE:gitlab-ci-builder-development
  FRONTEND_TEST_IMAGE_TAG: $CI_REGISTRY_IMAGE:gitlab-ci-test-development

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - export FRONTEND_IMAGE_TAG=$CANDIDATE_IMAGE

build:
  stage: build
  script:
    - $COMPOSE_BUILDER_CMD pull || true
    - $COMPOSE_BUILDER_CMD build
    - $COMPOSE_BUILDER_CMD push
    - $COMPOSE_CMD pull || true
    - $COMPOSE_CMD build
    - $COMPOSE_CMD push

tests:
  stage: test
  script:
    - $COMPOSE_CMD pull
    - $COMPOSE_CMD up -d
    - export FRONTEND_ADDR="http://frontend:80"
    - docker pull $FRONTEND_TEST_IMAGE_TAG || true
    - npm run docker_test
    - $COMPOSE_CMD down
    - docker push $FRONTEND_TEST_IMAGE_TAG

release-image:
  stage: release
  script:
    - docker pull $CANDIDATE_IMAGE
    - docker tag $CANDIDATE_IMAGE $RELEASE_IMAGE
    - docker push $RELEASE_IMAGE
  only:
    - development

deploy:
  stage: deploy
  script:
    - curl --fail -XPOST "$DEPLOY_WEBHOOK_DEVELOPMENT"
  only:
    - development
